/*
 * =====================================================================================
 *
 *       Filename:  stat.h
 *
 *    Description:  pop stat
 *
 *        Version:  1.0
 *        Created:  09/25/2011 01:42:13 PM
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  Ian (Ian), ian@taomee
 *        Company:  taomee co.
 *
 * =====================================================================================
 */

#include "Csprite.h"
#include "util.h"

struct msglog_item2{
	uint32_t v1;
	uint32_t v2;
}__attribute__((packed));
struct  msglog_item1{
	uint32_t v1;
}__attribute__((packed));
struct msglog_item3{
	uint32_t v1;
	uint32_t v2;
	uint32_t v3;
}__attribute__((packed));

struct msglog_item4{
	uint32_t v1;
	uint32_t v2;
	uint32_t v3;
	uint32_t v4;
}__attribute__((packed));

inline void stat_log_login_ip(Csprite* p)
{
	/*
	   登录IP分布
	   0x11000006
	   （米米号、IP）
	   */
	struct msglog_item2 item;
	item.v1=p->id;
	item.v2=p->fdsess->remote_ip;
	msglog(statistic_file, 0x11000006, time(NULL), &item, sizeof(item)); 
}

inline void stat_log_new_user(Csprite* p)
{
	/*
		新增用户数
		0x11000003
		（米米号、1、米米号、注册时间）
	*/

	struct msglog_item4 item;
	item.v1=p->id;
	item.v2=1;
	item.v3=p->id;
	item.v4=time(NULL);
	msglog(statistic_file, 0x11000003, time(NULL), &item, sizeof(item)); 
}

inline void stat_log_login_on(Csprite* p)
{
	/*
	   登入/登出online
	   0x11000001
	   登录时发：(1、0、米米号、0)；登出时发：(0、1、米米号、登录时长)
   */
	struct msglog_item4 item;
	item.v1=1;
	item.v2=0;
	item.v3=p->id;
	item.v4=0;
	msglog(statistic_file ,0x11000001,  time(NULL), &item, sizeof(item)); 
}

inline void stat_log_login_off(Csprite* p, uint32_t online_time_once)
{
	/*
		 登入/登出online
 		0x11000001
 		登录时发：(1、0、米米号、0)；登出时发：(0、1、米米号、登录时长)
	*/
	struct msglog_item4 item;
	item.v1=0;
	item.v2=1;
	item.v3=p->id;
	item.v4=online_time_once;
	msglog(statistic_file ,0x11000001,  time(NULL), &item, sizeof(item)); 
}


inline void stat_log_online_time(Csprite* p, uint32_t online_time_once)
{
	/*
	   米米号-登录时长
	   0x11000002
	   登出时发：（米米号、登录时长）
   */
	struct msglog_item2 item;
	item.v1=p->id;
	item.v2=online_time_once;
	msglog(statistic_file ,0x11000002,  time(NULL), &item, sizeof(item)); 
}

inline void stat_log_task_node(Csprite* p, uint32_t islandid, uint32_t task_nodeid)
{
	/*XX岛任务
	 *  0x11101001+(islandID << 12)+taskID
	 *   （米米号）
	 *    需要计算总量，最后一步id这里作为0处理
	 */ 

	struct msglog_item1 item;
	item.v1=p->id;
	if (task_nodeid==END_TASK_NODEID){
		task_nodeid=0;
	}

	msglog(statistic_file , 0x11101001+(islandid <<12 )+task_nodeid, time(NULL), &item, sizeof(item)); 
}

inline void stat_log_enter_map(Csprite* p, uint32_t islandid, uint32_t mapid)
{
	/* 统计XX岛地图
 		0x11001000+(islandID << 12)+mapID
 		（米米号、1）
		 需计算每个地图的总量
 	*/

	struct msglog_item2 item;
	item.v1=p->id;
	item.v2=1;
	msglog(statistic_file, 0x11001000+(islandid<< 12)+mapid, time(NULL), &item, sizeof(item)); 
}

inline void stat_log_talk_npc(Csprite* p, uint32_t npc_id)
{
	/*	
		NPC说话
		0x11200000+npcID-10000
		（米米号、1）
		需计算每个NPC的总量
 	*/
 
	struct msglog_item2 item;
	item.v1=p->id;
	item.v2=1;
	msglog(statistic_file, 0x11200000+npc_id-10000, time(NULL), &item, sizeof(item)); 
}
