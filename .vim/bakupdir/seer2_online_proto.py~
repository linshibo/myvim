# -*- coding: utf-8 -*-

class Cseer2_online_proto :
	def __init__(self,ip,port):
		pass

	def cli_get_both_btl_team_info(self  ):
		"""
拉取战队双方信息:

	"""

		pass

	def cli_get_online_version(self  ):
		"""
得到ONLINE发布版本的信息:

	"""

		pass

	def cli_login(self ,sess ):
		"""
登录包:
	/* 客户端的16字节session */
	#定长数组,长度:16, 类型:char 
	public sess ;


	"""

		pass

	def cli_enter_map(self ,new_map_id,pos_x,pos_y ):
		"""
进入地图<FONT color=red>（返回包为广播：新地图所有usr，进入）</FONT>:
	/* 进入新地图的Y坐标 */
	#类型:uint32
	public pos_y;


	"""

		pass

	def cli_leave_map(self  ):
		"""
离开地图，<FONT color=red>返回包为广播包</FONT> <BR>PS：1. 切换正常地图流程，必须先离开旧map，再进入新map；2. 切换战斗地图流程，只需离开旧map，不需进入战斗地图:

	"""

		pass

	def cli_list_user(self  ):
		"""
列出当前场景中的所有用户（请求包只有包头; <FONT color=red>返回包为广播包，但不再广播至自己</FONT>）:

	"""

		pass

	def cli_get_item_list(self ,start_id,end_id ):
		"""
用户拉取物品信息:
	/* 物品终止ID */
	#类型:uint32
	public end_id;


	"""

		pass

	def cli_buy_item(self ,item_id,count ):
		"""
赛尔豆购买物品:
	/* 数量 */
	#类型:uint16
	public count;


	"""

		pass

	def cli_get_cloth_list(self ,start_id,end_id ):
		"""
拉取用户装扮:
	/* 装扮终止ID */
	#类型:uint32
	public end_id;


	"""

		pass

	def cli_change_title(self ,item_id ):
		"""
更换称号<FONT color=red>(返回包为广播包)</FONT>:
	/* 称号对应的勋章ID */
	#类型:uint32
	public item_id;


	"""

		pass

	def cli_sell_item(self ,item_id,count ):
		"""
卖东西, 得赛尔豆:
	/* 数量 */
	#类型:uint16
	public count;


	"""

		pass

	def cli_get_usr_detail_info(self ,user_id ):
		"""
拉取用户详细资料:
	/* 用户ID */
	#类型:uint32
	public user_id;


	"""

		pass

	def cli_accept_task(self ,task_id ):
		"""
接受任务<FONT color=red>目前主线ID：1~1000， 支线ID：10001~13001</FONT>:
	/* 任务ID */
	#类型:uint32
	public task_id;


	"""

		pass

	def cli_notify_kick_user_offline(self  ):
		"""
被踢下线<font color="red">（此协议为后台主动发送，无需请求包）</font>:

	"""

		pass

	def cli_cancel_task(self ,task_id ):
		"""
取消任务（主线任务不能取消）:
	/* 任务ID */
	#类型:uint32
	public task_id;


	"""

		pass

	def cli_get_task_info(self ,task_list ):
		"""
获取任务信息（拉取svr20字节 与 cli40字节）:
	/*查询任务列表*/
	#变长数组,最大长度:999999, 类型:uint32_t
	public task_list =array();


	"""

		pass

	def cli_set_task_step_info(self ,task_id,step,finish_flag,cli_buf ):
		"""
设置任务步骤信息:
	/* 客户端buf */
	#定长数组,长度:40, 类型:uint8_t 
	public cli_buf =array();


	"""

		pass

	def cli_get_monster_in_storage_list(self ,start_id,end_id ):
		"""
获得仓库的精灵列表（目前客户端起止ID传1~1000，若以后精灵数量大于1000，再多发一条协议，范围为1000~2000）<BR>若客户端传上来范围大于1000，服务器直接断开:
	/* 截止精灵编号 */
	#类型:uint32
	public end_id;


	"""

		pass

	def cli_get_mon_simple_info(self ,catch_time ):
		"""
查看仓库和放生仓库中的精灵信息<FONT color=red>(背包中最多6只精灵，仓库最多1000只精灵)</FONT>:
	/* 捕捉时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_set_starter_mon(self ,catch_time ):
		"""
设置对战首发精灵:
	/* 欲设置首发的精灵的捕捉时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_set_follow_mon(self ,catch_time,flag ):
		"""
设置精灵跟随与否<FONT color=red>(返回包为广播包)</FONT>:
	/* 0：不跟随； 1：跟随； */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_set_mon_status(self ,catch_time,flag ):
		"""
设置精灵放仓库或放背包里<BR>note：当精灵从仓库放入背包时，若背包满，服务器发错误码，客户端接收到错误码后，请用户在背包中选择一只替换精灵，客户端发1020（flag=0），将替换精灵放至仓库，再发1020（flag=1），将原精灵放入背包:
	/* 0-放仓库；1-放背包 */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_set_mon_free_status(self ,catch_time,mon_id,flag ):
		"""
设置精灵放生或回收:
	/* 1-放生；0-回收 */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_get_free_mon_list(self  ):
		"""
获得放生仓库精灵列表:

	"""

		pass

	def cli_check_users_onoff(self ,usr_list ):
		"""
查看用户是否在线:
	/*待查询的用户列表*/
	#变长数组,最大长度:200, 类型:uint32_t
	public usr_list =array();


	"""

		pass

	def cli_add_friend(self ,user_id,flag ):
		"""
添加好友或黑名单:
	/* 好友：0， 黑名单：1. */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_del_friend(self ,user_id,flag ):
		"""
删除好友或黑名单:
	/* 好友：0， 黑名单：1. */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_notify_add_friend(self  ):
		"""
通知添加好友请求<FONT color=red>（此协议为后台主动发送，无需请求包）</FONT>:

	"""

		pass

	def cli_reply_add_friend(self ,user_id,flag ):
		"""
通知被添加好友:
	/* 是否接受：0为接受邀请，1为拒绝邀请 */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_get_usr_simple_info(self ,user_id ):
		"""
拉取用户简单资料:
	/* 用户ID */
	#类型:uint32
	public user_id;


	"""

		pass

	def cli_change_usr_signature(self ,signature ):
		"""
更新用户个性签名:
	/*签名内容，以‘\0’结尾，不多于99个字节(最多33个汉字)<BR>note：注意数组变长，AS在协议解析时，请自行加入uint32_t的len*/
	#变长数组,最大长度:99, 类型:char
	public signature ;


	"""

		pass

	def cli_exchange_move_id(self ,catch_time,moves ):
		"""
精灵替换技能:
	/*精灵目前拥有的技能*/
	#变长数组,最大长度:5, 类型:uint32_t
	public moves =array();


	"""

		pass

	def cli_catch_mon(self ,item_id ):
		"""
捕捉精灵:
	/* 捕捉精灵用的物品的ID号 */
	#类型:uint32
	public item_id;


	"""

		pass

	def cli_exchange_mon(self ,catch_time ):
		"""
交换精灵:
	/* 精灵的捕捉时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_assign_ev_pool(self ,catch_time,add_ev ):
		"""
分配学习力:
	/*各个能力要增加的学习力*/
	#变长数组,最大长度:6, 类型:ol_assign_ev_pool_t
	public add_ev =array();


	"""

		pass

	def cli_get_mon_handbook(self  ):
		"""
得到精灵图鉴:

	"""

		pass

	def cli_get_reward_accord_mon_handbook(self ,index ):
		"""
根据精灵图鉴完成度获取物品:
	/* 配置表中的index */
	#类型:uint32
	public index;


	"""

		pass

	def cli_add_monster_hp(self ,catch_time ):
		"""
用赛尔豆增加血量:
	/* 精灵的捕获时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_get_home_info_enter_home(self  ):
		"""
进入小屋拉取小屋的信息:

	"""

		pass

	def cli_set_training_mon(self ,catch_time ):
		"""
设置训练精灵:
	/* 设置的训练精灵的捕捉时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_cancal_training_mon(self ,catch_time ):
		"""
用户取消精灵训练:
	/* 精灵的捕捉时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_get_visit_info(self  ):
		"""
得到小屋好友动态信息:

	"""

		pass

	def cli_fight_with_train_mon(self ,catch_time ):
		"""
挑战在小屋训练的精灵:
	/* 小屋训练的精灵的捕捉时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_start_game(self ,game_id ):
		"""
小游戏开始:
	/* 游戏的ID号 */
	#类型:uint32
	public game_id;


	"""

		pass

	def cli_end_game(self ,game_id,score,game_gate,win_or_lose,check_num,check_data ):
		"""
游戏结束:
	/* 校验用的数据 */
	#定长数组,长度:4, 类型:uint8_t 
	public check_data =array();


	"""

		pass

	def cli_set_or_cancel_mon_signet(self ,catch_time,item_id ):
		"""
设置或者取消精灵身上的纹章:
	/* 纹章的ID号，0表示取消纹章的使用权限 */
	#类型:uint32
	public item_id;


	"""

		pass

	def cli_fight_boss(self ,boss_id,pillar_id ):
		"""
挑战BOSS:
	/*剩余柱子ID(0,1,2,3,4)*/
	#变长数组,最大长度:5, 类型:uint32_t
	public pillar_id =array();


	"""

		pass

	def cli_fight_gate_mon(self  ):
		"""
挑战一系列门的怪:

	"""

		pass

	def cli_mon_use_prop(self ,catch_time,item_id ):
		"""
使用道具:
	/* 道具ID号 */
	#类型:uint32
	public item_id;


	"""

		pass

	def cli_quit_fight_gate(self  ):
		"""
退出门对战:

	"""

		pass

	def cli_select_one_mon(self ,mon_id ):
		"""
门对战中用户选择精灵(从对方战败的中选择一只):
	/* 选着的精灵ID */
	#类型:uint32
	public mon_id;


	"""

		pass

	def cli_add_item_info(self  ):
		"""
通知用户所加的物品<FONT color=red>（后台主动发包，不需要请求包）</FONT>:

	"""

		pass

	def cli_get_home_credit(self  ):
		"""
得到小屋的荣誉榜:

	"""

		pass

	def cli_interact_dream_mon(self ,dream_mon_id,task_id ):
		"""
精灵梦境交互:
	/* 交互的任务ID号 */
	#类型:uint32
	public task_id;


	"""

		pass

	def cli_trigger_double_exp(self  ):
		"""
触发双倍经验值:

	"""

		pass

	def cli_swap_item(self ,index,num ):
		"""
交换或者获取物品:
	/* 兑换的数目 */
	#类型:uint32
	public num;


	"""

		pass

	def cli_use_add_exp_item_notify(self  ):
		"""
使用加经验值的道具，精灵属性更改通知包<FONT color=red>（具体命令格式参考命令号5）</FONT>:

	"""

		pass

	def cli_use_add_exp_item_update(self  ):
		"""
使用道具加经验值，精灵属性的最新数值<FONT color=red>（具体协议格式参考1507）</FONT>:

	"""

		pass

	def cli_get_only_flag(self  ):
		"""
得到用户做过某件事的标志位:

	"""

		pass

	def cli_get_spt_info(self  ):
		"""
得到SPT信息:

	"""

		pass

	def cli_mine(self ,id ):
		"""
采矿:
	/* 配置文件mine.xml中的标号 */
	#类型:uint32
	public id;


	"""

		pass

	def cli_get_week_type_value(self ,start_type,end_type ):
		"""
得到每周type值对应的value值:
	/* 终止的type值 */
	#类型:uint32
	public end_type;


	"""

		pass

	def cli_get_client_buf_info(self ,type ):
		"""
得到客户端保存的数据:
	/* 类型值 */
	#类型:uint32
	public type;


	"""

		pass

	def cli_set_client_buf_info(self ,type,buf ):
		"""
设置客户端的内容(<FONT color=red>type值小于100000客户端能够设置，大于100000只能后台设置</FONT>):
	/* 要设置的内容 */
	#定长数组,长度:50, 类型:char 
	public buf ;


	"""

		pass

	def cli_fight_gate_mon_select_mon(self ,playing_method_id,mode,mon_catch_time,continue_last_level ):
		"""
挑战门战前,选择出战精灵:
	/* 继续上次层数(0:从新开始,1:继续) */
	#类型:uint8
	public continue_last_level;


	"""

		pass

	def cli_day_limit(self ,day_limit_type ):
		"""
获取每日上限的已完成次数:
	/* 每日上限类型 (玩法1：33:门战普通模式,34:门战50v50模式) (玩法2：50:门战普通模式,51:门战50v50模式) (玩法3：67:门战普通模式,68:门战50v50模式)195:每日垃圾打扫次数 */
	#类型:uint32
	public day_limit_type;


	"""

		pass

	def cli_fight_activity_boss(self ,boss_id ):
		"""
打活动中的boss:
	/* 活动中BOSS的ID号(activity_mon.xml)<br>1:萨伦帝国卫兵; 2:士官; 3:青蜂队长 */
	#类型:uint32
	public boss_id;


	"""

		pass

	def cli_get_magic_num_info(self ,magic_password ):
		"""
得到神器密码的相关信息:
	/* 神奇密码，实际长度{12|16|24}个字符，不包括结束符, 多余字节填\0 */
	#定长数组,长度:32, 类型:char 
	public magic_password ;


	"""

		pass

	def cli_consume_magic_num(self ,magic_password,user_id,consume_gift ):
		"""
消费礼物:
	/*消费的礼物，如果数目为零，表示兑换全部*/
	#变长数组,最大长度:100, 类型:magic_item_info_t
	public consume_gift =array();


	"""

		pass

	def cli_add_all_bag_mon_hp_free(self  ):
		"""
用户最高等级精灵低于三十级，免费为背包里的所有精灵加血:

	"""

		pass

	def cli_notify_sys_msg(self  ):
		"""
通告<font color="red">（此协议为后台主动发送，无需请求包）</font>:

	"""

		pass

	def cli_vote(self ,id,vote_info ):
		"""
用户投票:
	/*用户答案信息*/
	#变长数组,最大长度:100, 类型:vote_info_t
	public vote_info =array();


	"""

		pass

	def cli_get_vote_info(self ,id ):
		"""
得到投票的信息:
	/* 投票活动的ID号 */
	#类型:uint32
	public id;


	"""

		pass

	def cli_notify_sys_detail_msg(self  ):
		"""
详细通告<font color="red">（此协议为后台主动发送，无需请求包）</font>:

	"""

		pass

	def cli_get_one_mon_info(self ,catch_time ):
		"""
得到某个精灵的信息(目前只支持获取初始精灵，即返回的是online内存保存的初始精灵的信息):
	/* 精灵的捕获时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_shoot(self ,aim_type,type,pos_x,pox_y ):
		"""
射击<font color="red">（返回包为广播）</font>:
	/* 射击目标的Y坐标 */
	#类型:uint32
	public pox_y;


	"""

		pass

	def cli_set_caller(self  ):
		"""
设置自己为召集者:

	"""

		pass

	def cli_new_player_write_caller_user_id(self ,caller_user_id ):
		"""
填写召集者的米米号:
	/* 召集者的米米号 */
	#类型:uint32
	public caller_user_id;


	"""

		pass

	def cli_get_caller_info(self  ):
		"""
得到填写此米米号的召集者的信息:

	"""

		pass

	def cli_enter_pvp_war(self ,which_gate,which_mode ):
		"""
用户门对战，进入用户匹配过程:
	/* 哪个模式 ,102表示普通模式，103表示50V50模式 */
	#类型:uint32
	public which_mode;


	"""

		pass

	def cli_cancel_pvp_war(self  ):
		"""
取消匹配:

	"""

		pass

	def cli_submit_questionary(self ,flag,type,title,msg ):
		"""
提交意见表:
	/*消息内容*/
	#变长数组,最大长度:1000, 类型:char
	public msg ;


	"""

		pass

	def cli_broadcast_match_info(self  ):
		"""
通知匹配的信息<FONT color=red>（不需要请求包，由后台主动返回）</FONT>:

	"""

		pass

	def cli_create_legion(self ,nick,logo_foreground,logo_background,logo_color ):
		"""
创建一个军团:
	/* 队徽图标底色 */
	#类型:uint32
	public logo_color;


	"""

		pass

	def cli_invite_join_legion(self ,invite_user_id ):
		"""
邀请加入军团:
	/* 被邀请人的米米号 */
	#类型:uint32
	public invite_user_id;


	"""

		pass

	def cli_legion_info_notify(self  ):
		"""
军团信息通知<FONT color=red>（此协议为后台主动发送，无需请求包）</FONT><BR>note:（目前用到的地方）邀请通知；答复邀请通知；队长踢人通知；军团解散；移交队长:

	"""

		pass

	def cli_reply_join_legion(self ,to_id,legion_id,accept ):
		"""
回复加入军团邀请:
	/* 0:拒绝,1:接受 */
	#类型:uint32
	public accept;


	"""

		pass

	def cli_mon_limit_event(self ,catch_time,index ):
		"""
精灵的限制活动事件:
	/* 配置表的下标 */
	#类型:uint32
	public index;


	"""

		pass

	def cli_get_mon_limit_info(self ,catch_time,start_type,end_type ):
		"""
得到精灵限制活动的信息:
	/* 结束的类型 */
	#类型:uint32
	public end_type;


	"""

		pass

	def cli_get_legion_member_list(self  ):
		"""
拉取军团成员列表:

	"""

		pass

	def cli_get_legion_member_simply_info(self ,user_id ):
		"""
获得战队成员的简单信息:
	/* 米米号 */
	#类型:uint32
	public user_id;


	"""

		pass

	def cli_get_today_game_id(self  ):
		"""
得到今天玩的哪些小游戏可以获取物品:

	"""

		pass

	def cli_fire_legion_member(self ,user_id ):
		"""
开除军团成员:
	/* 要开除的军团成员 */
	#类型:uint32
	public user_id;


	"""

		pass

	def cli_quit_legion(self  ):
		"""
退出军团:

	"""

		pass

	def cli_get_daily_task_info(self  ):
		"""
获取日常任务信息:

	"""

		pass

	def cli_notify_daily_task_state(self  ):
		"""
通知日常任务信息改变<FONT color=red>（此协议为后台主动发送，无需请求包）</FONT>:

	"""

		pass

	def cli_buy_item_by_honour(self ,item_id,count,catch_time ):
		"""
用荣誉点数买东西:
	/* 精灵捕获时间,表示用在那个精灵身上。若买道具，则填0 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_change_wearing_clothes(self ,cloth_list ):
		"""
更新用户身上的装扮<font color="red">（返回包为广播包）</font>:
	/*欲穿上的装扮列表*/
	#变长数组,最大长度:6, 类型:uint32_t
	public cloth_list =array();


	"""

		pass

	def cli_change_user_nick(self ,nick ):
		"""
修改用户昵称<font color="red">（返回包为广播包）</font>:
	/* 昵称 */
	#定长数组,长度:16, 类型:char 
	public nick ;


	"""

		pass

	def cli_notify_sys_time(self  ):
		"""
通知系统时间:

	"""

		pass

	def cli_walk(self ,end_x,end_y,now_time ):
		"""
走路（0-走；1-跑）<FONT color=red>返回包为广播包</COLOR></FONT>:
	/* 当前时间 */
	#类型:uint32
	public now_time;


	"""

		pass

	def cli_chat(self ,user_id,msg ):
		"""
聊天<FONT color=red>（返回包为 广播）</FONT>:
	/*聊天内容，以‘\0’结尾，不多于135个字节(最多45个汉字)<BR>note：注意数组变长，AS在协议解析时，请自行加入uint32_t的len*/
	#变长数组,最大长度:140, 类型:char
	public msg ;


	"""

		pass

	def cli_notify_map_wild_show(self  ):
		"""
地图刷怪的信息<FONT color=red>(返回包为广播包)</FONT> <BR>:

	"""

		pass

	def cli_arena_info(self  ):
		"""
擂台信息:

	"""

		pass

	def cli_data_broadcast(self ,type ):
		"""
客户端广播数据<font color="red">（返回包为广播）</font>:
	/* 广播的类型 */
	#类型:uint32
	public type;


	"""

		pass

	def cli_join_activity_team(self ,team_id ):
		"""
报名参加队伍:
	/* 队伍编号<br>1：巴队；2：洛队 */
	#类型:uint32
	public team_id;


	"""

		pass

	def cli_notify_pvp_accept(self  ):
		"""
通知PVP中接受方,应战:

	"""

		pass

	def cli_get_activity_team_scores(self  ):
		"""
获得活动每队分数:

	"""

		pass

	def cli_notify_pvp_refuse(self  ):
		"""
对手拒绝PVP:

	"""

		pass

	def cli_user_state(self  ):
		"""
返回用户状态<font color="red">（返回包为广播：地图所有usr）</font>:

	"""

		pass

	def cli_notify_check_auto(self  ):
		"""
发送验证图片通知<font color="red">（此协议为后台主动发送，无需请求包）</font>:

	"""

		pass

	def cli_check_key(self ,answer ):
		"""
提交验证图片的答案:
	/* 答案 */
	#类型:uint32
	public answer;


	"""

		pass

	def cli_set_svr_buf_step(self ,type,step,step_info ):
		"""
设置buf内容<FONT color=red>type值需要是大于等于100000</FONT>:
	/* 步骤的内容 */
	#类型:uint32
	public step_info;


	"""

		pass

	def cli_get_daily_task_bonus(self ,task_id ):
		"""
领取日常任务的奖励:
	/* 日常任务ID */
	#类型:uint32
	public task_id;


	"""

		pass

	def cli_get_daily_task_accumulated_bonus(self  ):
		"""
领取日常任务的积累奖励:

	"""

		pass

	def cli_change_potential_use_item(self ,item_id,catch_time ):
		"""
洗资质:
	/* 精灵的捕获时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_mon_cond_evolution(self ,catch_time,item_id ):
		"""
精灵分支进化:
	/* 道具的ID号 */
	#类型:uint32
	public item_id;


	"""

		pass

	def cli_dissolve_legion(self ,flag ):
		"""
解散军团:
	/* 0：申请解散，1：终止解散 */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_set_legion_leader(self ,user_id ):
		"""
移交军团队长:
	/* 移交用户的米米号 */
	#类型:uint32
	public user_id;


	"""

		pass

	def cli_update_legion_logo_info(self ,legion_logo_info ):
		"""
修改军团队徽:
	/* 军团队徽信息 */
	#类型:legion_logo_info_t
	public legion_logo_info;


	"""

		pass

	def cli_get_legion_detail_info(self  ):
		"""
获取军团详细信息:

	"""

		pass

	def cli_get_online_can_swap_num(self  ):
		"""
查询在线送奖励的可送个数:

	"""

		pass

	def cli_clear_rubbish(self  ):
		"""
打扫家园中的垃圾:

	"""

		pass

	def cli_get_bring_up_mon_reward_info(self  ):
		"""
得到培养精灵能够领取哪些物品的下标:

	"""

		pass

	def cli_get_allhallowmas_candy_info(self  ):
		"""
获取哪些用户获取糖果的信息:

	"""

		pass

	def cli_can_play_this_game(self ,game_id ):
		"""
用户能否玩此游戏:
	/* 游戏的ID号 */
	#类型:uint32
	public game_id;


	"""

		pass

	def cli_get_signed_in_info(self  ):
		"""
获得军团签到信息、挑战信息、公告等:

	"""

		pass

	def cli_legion_sign_in(self  ):
		"""
军团签到:

	"""

		pass

	def cli_update_legion_notice(self ,notice ):
		"""
更新军团公告:
	/*军团公告*/
	#变长数组,最大长度:241, 类型:char
	public notice ;


	"""

		pass

	def cli_set_mon_search_treasure(self ,catch_time,flag ):
		"""
设置精灵寻宝:
	/* 0：寻宝；1：放弃寻宝；2：收获 */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_bait_fish(self ,fishing_rod_id,bait_id,area_id ):
		"""
放饵钓鱼:
	/* 钓鱼区域ID */
	#类型:uint32
	public area_id;


	"""

		pass

	def cli_get_fish(self ,ratio ):
		"""
拉竿,获取鱼:
	/* 钓鱼系数 */
	#类型:uint32
	public ratio;


	"""

		pass

	def cli_trial_vip_activity(self ,scores ):
		"""
用户获得了vip试用资格:
	/* 分数 */
	#类型:uint32
	public scores;


	"""

		pass

	def cli_get_legion_upgrade_info(self  ):
		"""
获取军团功能升级信息:

	"""

		pass

	def cli_upgrade_legion(self ,type ):
		"""
升级军团功能:
	/* 升级的类型<br>1.对战经验 2.恢复消耗 3.捕获率 4.战队人数 */
	#类型:uint8
	public type;


	"""

		pass

	def cli_show_fish(self  ):
		"""
展示钓过的鱼:

	"""

		pass

	def cli_saving_for_legion(self ,coins ):
		"""
往军团资金中存赛尔豆:
	/* 预存入的赛尔豆 */
	#类型:uint32
	public coins;


	"""

		pass

	def cli_get_cooking_info(self ,type,item_id ):
		"""
获取料理的信息:
	/* 此次烹饪的物品的ID号 */
	#类型:uint32
	public item_id;


	"""

		pass

	def cli_rand_event_or_item_id(self ,index,data ):
		"""
随机个事件或者物品，但随机出来的物品不加入缓存:
	/*需要传递的参数*/
	#变长数组,最大长度:10, 类型:uint32_t
	public data =array();


	"""

		pass

	def cli_irrigate(self  ):
		"""
浇灌友谊树:

	"""

		pass

	def cli_week_month_forever_limit(self ,type ):
		"""
拉取周活动，月活动，永久活动的参与次数:
	/* 活动类型ID */
	#类型:uint32
	public type;


	"""

		pass

	def cli_consume_energy_ball(self ,flag ):
		"""
消费能量球:
	/* 0：装备；1：吸收 */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_cooking(self ,flag,index,fire_value ):
		"""
烹饪:
	/* 火力值 */
	#类型:uint32
	public fire_value;


	"""

		pass

	def cli_vip_change_color(self ,color ):
		"""
改变皮肤颜色:
	/* 新皮肤颜色 */
	#类型:uint32
	public color;


	"""

		pass

	def cli_game_start_by_gate(self ,game_id ):
		"""
游戏开始，是通过关卡送物品的:
	/* 游戏的编号 */
	#类型:uint32
	public game_id;


	"""

		pass

	def cli_game_end_by_gate(self ,game_id,game_data,check_data ):
		"""
游戏结束，通过关卡获取物品的游戏:
	/* 校验用的数据 */
	#类型:uint32
	public check_data;


	"""

		pass

	def cli_get_legion_top_list(self  ):
		"""
获取前100名军团的列表:

	"""

		pass

	def cli_get_legion_ranking_info(self ,legion_id ):
		"""
获取军团简单排名信息:
	/*军团ID列表*/
	#变长数组,最大长度:10, 类型:uint32_t
	public legion_id =array();


	"""

		pass

	def cli_occupy_or_leave_ice_position(self ,pos,occupy_or_leave ):
		"""
用户离开或者占据某个位置(破晓黎明 冰封之轴):
	/* 0表示离开，1表示占据 */
	#类型:uint32
	public occupy_or_leave;


	"""

		pass

	def cli_notify_message_by_svr(self  ):
		"""
通知客户端信息<FONT color=red>（返回包为广播：地图所有usr）</FONT>:

	"""

		pass

	def cli_notify_vip_info(self  ):
		"""
通知客服端更新vip基本信息<font color="red">（返回包为广播：地图所有usr）</font>:

	"""

		pass

	def cli_get_usr_double_exp_info(self  ):
		"""
获取用户积累的双倍经验信息:

	"""

		pass

	def cli_player_attack(self ,type ):
		"""
用户攻击冰之轴或者解冻用户:
	/* 0表示打击冰之轴，其他表示解冻的米米号 */
	#类型:uint32
	public type;


	"""

		pass

	def cli_player_under_shield(self ,type ):
		"""
用户在盾的保护下或者回血:
	/* 0表示在盾之下，1表示回满血 */
	#类型:uint32
	public type;


	"""

		pass

	def cli_add_session(self  ):
		"""
添加用户session:

	"""

		pass

	def cli_use_double_exp(self  ):
		"""
领取双倍经验:

	"""

		pass

	def cli_get_ice_axle_info(self  ):
		"""
得到冰轴的信息:

	"""

		pass

	def cli_wash_monster_ev(self ,item_id,catch_time ):
		"""
洗学习力:
	/* 精灵的捕获时间 */
	#类型:uint32
	public catch_time;


	"""

		pass

	def cli_notify_vip_info_msg(self  ):
		"""
vip信息消息提示包:

	"""

		pass

	def cli_get_pyramid_challenge_mon(self  ):
		"""
获取金字塔挑战的精灵列表:

	"""

		pass

	def cli_get_pyramid_challenge_top_100(self  ):
		"""
获取每天前100名精灵金字塔挑战成功的玩家:

	"""

		pass

	def cli_get_devil_training_mons(self  ):
		"""
拉取参加魔鬼训练的精灵列表:

	"""

		pass

	def cli_devil_training(self ,catch_time,flag ):
		"""
参加魔鬼训练或结束训练:
	/* 1：训练；0：结束训练 */
	#类型:uint8
	public flag;


	"""

		pass

	def cli_fish_fight_mon(self  ):
		"""
与钓上的精灵对战:

	"""

		pass

	def cli_join_legion(self ,legion_id ):
		"""
申请加入军团:
	/* 军团ID */
	#类型:uint32
	public legion_id;


	"""

		pass

	def cli_get_snow_plan_info(self  ):
		"""
获得雪人计划的相关信息:

	"""

		pass

	def cli_notify_vip_lucky_info(self  ):
		"""
通知vip优惠充值活动赠送物品成功:

	"""

		pass

	def cli_reset_character(self ,catch_time,potion_id ):
		"""
洗性格道具:
	/* 药水ID */
	#类型:uint32
	public potion_id;


	"""

		pass

	def cli_calculate_happy_wheel(self  ):
		"""
vip欢乐大转盘开始时，计算转盘随机结果:

	"""

		pass

	def cli_happy_wheel(self ,id ):
		"""
vip欢乐大转盘:
	/* 编号 */
	#类型:uint8
	public id;


	"""

		pass

	def cli_fight_wild_mon(self ,region_id ):
		"""
对战野怪<BR>打野怪流程：1. 客户端发1500请求； 2. 服务器端回应1500后，主动发送4通知包； 3. 客户端收到4通知包后，发送1请求包； 4. 服务器发送1返回包； 5. 客户端发送1501请求； 6.服务器端回应1501后，（待对战双方的1501请求都发送后）主动发送2通知包；:
	/* 怪出现的地点号(1~9表示刷出来的怪的点，10~19任务中用的点，20~49是特殊条件下用的点, 50~149表示稀有精灵的,150:双精灵测试) */
	#类型:uint8
	public region_id;


	"""

		pass

	def cli_load_res_ready(self  ):
		"""
用户资源加载完成:

	"""

		pass

	def cli_select_move(self ,move_id ):
		"""
用户选择技能:
	/* 用户选择的技能 */
	#类型:uint32
	public move_id;


	"""

		pass

	def cli_player_invite_fight(self ,user_id,mode,single_or_double ):
		"""
邀请用户对战:
	/* 1:单精灵对战,2:双精灵对战 */
	#类型:uint8
	public single_or_double;


	"""

		pass

	def cli_player_accept_fight(self ,invite_user_id,refuse_or_accept ):
		"""
接受用户对战:
	/* 拒绝或者接受 (0:拒绝,1:接收) */
	#类型:uint32
	public refuse_or_accept;


	"""

		pass

	def cli_player_cancel_invite_fight(self  ):
		"""
取消邀请:

	"""

		pass

	def cli_chg_mon_pos(self  ):
		"""
更换主副位置精灵的位置:

	"""

		pass

	def cli_notify_player_end_blt(self  ):
		"""
对战结束，更新所有精灵信息<font color="red">（此协议为后台主动发送，无需请求包）</font>:

	"""

		pass

	def cli_online_send_invite_msg(self  ):
		"""
online向用户发送战斗请求包<FONT color=red>（此协议为后台主动发送，无需请求包）</FONT>:

	"""

		pass

	def cli_player_escape(self  ):
		"""
用户逃离战斗:

	"""

		pass

	def cli_notify_pvp_end_btl(self ,winner ):
		"""
通知给邀请者对应的ONLINE,战斗结束:
	/* 获胜者 */
	#类型:uint8
	public winner;


	"""

		pass

	def cli_use_npc_fight(self ,region_id,positions ):
		"""
使用NPC战斗:
	/*精灵的位置信息*/
	#变长数组,最大长度:10, 类型:uint32_t
	public positions =array();


	"""

		pass

	def gm(self ,cmd,buf ):
		"""
gm命令(只能修改在线数据):
	/*内容*/
	#变长数组,最大长度:2000, 类型:char
	public buf ;


	"""

		pass


