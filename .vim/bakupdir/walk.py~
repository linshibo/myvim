#!/usr/bin/env python
# -*- coding: utf-8 -*-
import mole2_online_proto
import mole2_online
import login_proto 
import proto_base 
import time 
import mypub 
import struct 

class Dealmsg: 
	def __init__(self):
		pass

	#def do_cli_user_walk(self,result,primsg):
#		print "asdfasfa ",  result
#		pass

	def do_cli_get_rand_item(self, result, primsg) :
		if (result == 0) :
			itemid, count = struct.unpack(">LL", primsg)
			print "获得物品：", itemid, count

	def dealmsg(self,cmdid,userid,result,primsg):
		if mole2_online_proto.cmd_map.has_key(cmdid):
			#得到类名
			classname=mole2_online_proto.cmd_map[cmdid][3];

			if classname <> None:	
				pri_out=classname() ;
			else:
				pri_out=proto_base.Cmessage();
			
			ba=proto_base.Cbyte_array();
			ba.set_is_big_endian(True);
			ba.init_read_mode(primsg);
			if (result==0 ):
				ret=pri_out.read_from_buf(ba);
				if ( not  ret ):
					print "解析出错:报文不够",classname;
				if (ba.get_left_len() >0 ):
					print "解析出错:有剩余报文";
					mypub.print_hex_16(primsg[ba.get_postion():] );
			

			try:
				#得到调用函数
 				cmd_name=mole2_online_proto.cmd_map[cmdid][1];
				func_name='do_%s'%( cmd_name ) 
				print func_name
				func = getattr(self , func_name  )
				func(result,primsg);
			except AttributeError:
				print "deal: userid=%d, %s[%d] : "%(userid,cmd_name , cmdid )
				if ( result==0):
					pri_out.echo(True, "    ");
				pass
		else:
			print "未处理:", cmdid, result
			mypub.print_hex_16(primsg)


dm=Dealmsg()

def get_msg_return(need_cmdid,asnyc_flag=False):
	global p
	global dm 
	start_time=time.clock();
	while True:
		out_info=p.getrecvmsg();
		if (out_info):
			proto_len ,cmdid,   userid, seq, result,pri_msg=out_info;
			print ">>>>>>OUT:", cmdid, result, userid ,proto_len  ;
			if cmdid==1001:
				p.set_seq(seq);
			dm.dealmsg(cmdid,userid,result,pri_msg );
			if (cmdid==need_cmdid):
				return pri_msg 

		end_time=time.clock();
		if asnyc_flag and end_time-start_time>1:#是异步的
		  	return False;

import sys
userid=int( sys.argv[1] )
print userid
#userid=5005468
#logser 
#ip,port,key=login_proto.login("114.80.173.61", 1863,46 ,userid,"19840618")
#ip,port,key=login_proto.login("119.167.194.7", 1863,46 ,userid,"19840618")
ip,port,key=login_proto.login("10.1.1.46", 8989,7 ,userid, sys.argv[2] )
#ip,port,key=login_proto.login("10.1.1.134", 8989,1 ,userid,"142857")
print mypub.bin2hex( key)
print "login online:" ,ip,port
p=mole2_online.Cmole2_online(ip,port );
p.set_is_big_endian(True);
p.login(userid,key);
get_msg_return(1001,False);


#p.cli_get_survey_info();
#p.use_broadcast_item(0, 320002, 0, 1, 1);
#p.recommend_add_attr();
#p.get_bus_friend_base_info(144166011);
#get_msg_return(3102,False);
#p.cli_user_walk(100,135,345,456,0,0,0,0);
#p.check_spacetime_code("7123007461418722");
#p.use_spacetime_code("7123007461418722");
#p.user_init_info(10000, 120003, "ian", 1);
#p.prof_compensation(1);
#for i in range(700, 10000) :
#	p.cli_get_rand_item(i);
#	get_msg_return(1700, False);
#p.cli_get_petlist_type(24, 1, 100);
#p.cli_get_petlist_type(8, 1, 100);
#p.cli_get_petlist_type(7, 1, 100);
#p.cli_get_petlist_type(5, 1, 100);
#p.cli_get_petlist_type(4, 1, 100);
#p.cli_exchange_pet(10024,1,1308825500,24);
#p.cli_get_loop_task();
#p.cli_exchange_pet_for_item(1299645211, 42);
#p.cli_get_rand_item(813);

#p.mall_get_money_balance();
#p.mall_get_item_detail(410001);
#p.mall_buy_item("96E79218965EB72C92A549DD5A330112",410001,1);
#p.cli_get_relationship(960430143);
p.cli_enter_map(5007321,1,300,300, 0);
p.cli_user_walk(300, 300, 310, 310, 10, 0, 0, 0)

get_msg_return(0, False);
