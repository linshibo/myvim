#ifndef  CLI_PROTO_HPP
#define  CLI_PROTO_HPP
#include "common_def.hpp"
extern uint8_t pkgbuf[1 << 21];
struct player_t;
void init_cli_proto_head(void* header, player_t* p, uint16_t cmd, uint32_t len);
void init_cli_proto_head(void* header, userid_t uid, uint32_t seqno, uint16_t cmd, uint32_t len, uint32_t ret);
int send_msg_to_cli(player_t *p, uint16_t cmd, Cmessage* msg);
int send_msg_to_self(player_t *p, uint16_t cmd, Cmessage* c_out, int completed);
int send_error_to_self(player_t* p, int cmd, int err, int completed);
int send_pkg_to_self(player_t* p,  const void* pkg, const int pkglen, int completed);
void send_msg_to_all(uint16_t cmd, Cmessage* c_in);
int send_pkg_to_map(player_t *p, char *pkg, uint32_t len, bool if_skip_notifier, bool if_clear_waitcmd);
int send_msg_to_map(player_t * p, Cmessage * p_out, uint16_t cmd, bool if_skip_notifier, bool if_clear_waitcmd);
#endif  /*CLI_PROTO_HPP*/
