/*
 * =====================================================================================
 *
 *  @file  dbproxy.hpp 
 *
 *  @brief  跟dbproxy相关的函数 
 *
 *  compiler  gcc4.3.2 
 *	
 *  platform  Linux
 *
 * copyright:  TaoMee, Inc. ShangHai CN. All rights reserved
 *
 * =====================================================================================
 */

#ifndef DBPROXY_H_
#define DBPROXY_H_

extern "C" {
#include <inttypes.h>
#include <libtaomee/project/types.h>
}
#include "common_def.hpp"
struct player_t;

enum {
	/* DB的返回的错误码加上此值，返回给CLIENT */
	db_base_err = 100000,
};

#define CHECK_DB_ERR(p_, err_) \
	do { \
		if ((err_)) { \
			return send_error_to_self(p_, p_->waitcmd, (db_base_err + err_), 1); \
		} \
	} while(0)


/* @brief 表示TCP连接的参数
 */
struct fd_ip_port_t {
	int fd;
	char *ip;
	int port;
};

#pragma pack(1)

/* 跟运维DB交互的协议格式 */
struct svr_proto_t {
	uint32_t len; /* 协议的长度 */
    uint32_t seq_num; /* 序列号 */
    uint16_t cmd; /* 命令号 */
    uint32_t ret; /* DB返回的错误码 */
    userid_t user_id; /* 米米号 */
    uint8_t body[]; /* 包体信息 */
};


/* 跟DB交互的协议格式 */
struct db_proto_head_t {
	uint32_t len; /* 协议的长度 */
    uint32_t seq_num; /* 序列号 */
    uint16_t cmd; /* 命令号 */
    uint32_t ret; /* DB返回的错误码 */
    userid_t user_id; /* 米米号 */
	uint16_t area_id;
	uint32_t role_tm;
    uint8_t body[]; /* 包体信息 */
};

#pragma pack()
enum{
	check_session_cmd = 0xA032,
}


class Cmessage;

int send_msg_to_dbproxy(player_t *p,  userid_t user_id,uint32_t role_tm, int cmd, Cmessage* msg);
int send_msg_to_dbproxy(player_t *p, int cmd, Cmessage* msg,  userid_t user_id);
//int send_pkg_to_dbproxy(player_t *p,uint32_t user_id, int cmd, const char* body,  int bodylen);


void init_db_handle_funs();

int	init_all_udp_sockets();

int send_udp_msg_to_dbproxy(int cmd, Cmessage *msg,  userid_t user_id, uint8_t index);

void handle_db_return(db_proto_head_t *db_pkg, uint32_t len);


int db_return_expired(void* owner, void* data);


int init_udp_socket(uint8_t flag);


int send_msg_by_tcp(player_t *p, tcp_socket_index_t index, const void* buf, int total);

int init_tcp_socket();

#endif
