#ifndef  NET_H
#define  NET_H
#include  <iostream>
#include  <stdio.h>
#include  <cstdlib>
#include  <fcntl.h>
#include  <sys/types.h>  
#include  <sys/socket.h>
#include  <netinet/in.h>
#include  <sys/un.h>
#include  <sys/stat.h>
#include  <arpa/inet.h>
#include  <errno.h>
#include  <sys/epoll.h>
#include <sys/mman.h>
#include <sys/resource.h>
#include <sys/wait.h>
#include <linux/unistd.h>

typedef struct epoll_info{
	int epollfd;
	struct epoll_event events[100];
	int max_cnt;
}epoll_info_t;

typedef struct proto{
	uint32_t len;
	uint32_t cmd;
	uint8_t   data[];
}__attribute__((packed)) proto_t;

typedef struct fd_info{
	int fd;
	int servid;
	int ip;
	int port;
	uint8_t *sendq;
	uint8_t *recvq;
} fd_info_t;

typedef struct server_info{
	data_block_queue_t* recv_q;
}server_info_t;

int init_net(int count , char *ip, int port);
int net_loop(int parent);
int init_proc();
int exit_net();
int do_add_event(int fd);

#endif  /*NET_H*/
