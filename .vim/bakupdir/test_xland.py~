#!/usr/bin/env python
# -*- coding: utf-8 -*-
import xland_online_proto
import xland_online
import login_proto 
import proto_base 
import time 
import mypub 
import struct 
def print_err(msg):
    print "\033[1m\033[41m%s\033[0m"%msg
def print_succ(msg):
    print "\033[1m\033[42m%s\033[0m"%msg

class Dealmsg: 
	def __init__(self):
		pass

	def do_cli_get_rand_item(self, result, primsg) :
		if (result == 0) :
			itemid, count = struct.unpack(">LL", primsg)
			print "获得物品：", itemid, count

	def dealmsg(self,cmdid,userid,result,primsg):
		if mole2_online_proto.cmd_map.has_key(cmdid):
			#得到类名
			classname=mole2_online_proto.cmd_map[cmdid][3];

			if classname <> None:	
				pri_out=classname() ;
			else:
				pri_out=proto_base.Cmessage();
			
			ba=proto_base.Cbyte_array();
			ba.set_is_big_endian(True);
			ba.init_read_mode(primsg);
			if (result==0 ):
				ret=pri_out.read_from_buf(ba);
				if ( not  ret ):
					print "解析出错:报文不够",classname;
				if (ba.get_left_len() >0 ):
					print "解析出错:有剩余报文";
					mypub.print_hex_16(primsg[ba.get_postion():] );
			

			try:
				#得到调用函数
 				cmd_name=mole2_online_proto.cmd_map[cmdid][1];
				func_name='do_%s'%( cmd_name ) 
				print func_name
				func = getattr(self , func_name  )
				func(result,primsg);
			except AttributeError:
				print "deal: userid=%d, %s[%d] : "%(userid,cmd_name , cmdid )
				pri_out.echo(True, "    ");
				pass
			return pri_out;
		else:
			print "未处理:", cmdid, result
			mypub.print_hex_16(primsg)


dm=Dealmsg()

def get_msg_return(need_cmdid,asnyc_flag=False):
	global p
	global dm 
	start_time=time.clock();
	while True:
		out_info=p.getrecvmsg();
		if (out_info):
			proto_len ,cmdid,   userid, seq, result,pri_msg=out_info;
			if cmdid==1001:
				p.set_seq(seq);
			if result==0:
				print_succ( ">>>>OUT:cmdid: %d ret: %d  seq: %d len: %d"%(cmdid,result,seq,proto_len ) )  ;
				pri_out=dm.dealmsg(cmdid,userid,result,pri_msg );
			else:
				print_err( ">>>>ERROR:cmdid: %d ret: %d  seq: %d len: %d"%(cmdid,result,seq,proto_len ) )  ;
			if (cmdid==need_cmdid):
				return pri_out; 
		end_time=time.clock();
		if asnyc_flag and end_time-start_time>1:#是异步的
		  	return False;

import sys

userid=50067
if len(sys.argv)>=2:
	userid=int(sys.argv[1] )

onlineid=6
ip,port,key=login_proto.login("10.1.1.105", 8989,onlineid ,userid, "142857" )
print "userid:",userid ," login online:" ,ip,port
p=xland_online.Cxland_online(ip,port);
p.set_is_big_endian(True);
p.login(userid,key,onlineid);
get_msg_return(1001,False);
