/*
 * =========================================================================
 *
 *        Filename: Cgame.h
 *
 *        Version:  1.0
 *        Created:  2011-08-31 07:59:52
 *        Description:  
 *
 *        Author:  xxx (xxxj@taomee.com)
 *        Company:  TAOMEE
 *
 * =========================================================================
 */


#ifndef  CGAME_H
#define  CGAME_H
#include  "util.h" 
#include  <map>
#include  "./proto/pop_online.h" 
class Cgame_user_info {
	private:

	public:
		uint32_t userid;
		bool  can_start;//是否可以开始
		uint32_t opt_count;//操作的次数
};
enum enum_game_stat{
	GAME_START,	
	GAME_OPT,	
	GAME_END,	
	ENUM_GAME_STAT_END,	
};

class Cgame_item {
	private:
		enum enum_game_stat game_stat;//游戏状态
		uint32_t gameid;
		uint32_t start_userid;
		uint32_t cur_opt_userid;
		uint32_t step_timeout;//每一步的超时时间
		std::map<uint32_t , Cgame_user_info> user_map;

	public:
		void init( uint32_t game_map_id,uint32_t gameid, uint32_t src_userid,uint32_t obj_userid);
		//返回游戏是不是开始了
		bool set_user_can_start(uint32_t userid);
		bool user_opt( uint32_t userid, cli_game_opt_in *p_in);
		void noti_others( uint32_t userid, uint32_t cmdid, Cmessage *c_in=NULL);
		bool game_end(uint32_t userid,uint32_t win_flag  ,bool del_game_flag);
		void noti_all( uint32_t cmdid, Cmessage *c_in);
			


};
class Cgame_map {
	private:
		//
		uint32_t cur_use_game_map_id;
		//game_map_id ,
		std::map <uint32_t, Cgame_item > game_item_map;
		uint32_t gen_game_map_id(){
			this->cur_use_game_map_id++;
			while( this->cur_use_game_map_id ==0
				|| this->game_item_map.find(this->cur_use_game_map_id)!=this->game_item_map.end()
				 ){
				this->cur_use_game_map_id++;
			}
			return this->cur_use_game_map_id;
		}

	public:
		//game_map_id
		uint32_t add(uint32_t gameid, uint32_t src_userid, uint32_t obj_userid )
		{
			uint32_t game_map_id= this->gen_game_map_id();
			Cgame_item 	 game_item;
			game_item.init(game_map_id ,gameid, src_userid, obj_userid );
			this->game_item_map[game_map_id]=game_item;
			return game_map_id;
		}

		//返回是否开始了
		bool   set_user_can_start(uint32_t game_map_id, uint32_t userid );
		//用户操作
		bool user_opt(  uint32_t game_map_id, uint32_t userid, cli_game_opt_in *p_in)
		{
			std::map <uint32_t, Cgame_item >::iterator it;
			it=this->game_item_map.find(game_map_id);
			if(it!=this->game_item_map.end()){
				return it->second.user_opt( userid,p_in );
			}else{
				return false;
			}
		}

		bool game_end( uint32_t game_map_id, uint32_t userid,uint32_t win_flag ,bool del_game_flag );
		bool game_user_left( uint32_t game_map_id, uint32_t userid);

};



#endif  /*CGAME_H*/
