    //加载服务器id host
    reply, err := redis.Values(redisHandler.Get().Do("KEYS", "gateway:server_host:*"))
    if err != nil {
        fmt.Println("Cant get result of keys", err)
        return err
    }
    namesStr, err := redis.Strings(reply, nil)
    if err != nil {
        fmt.Println("Cant convert result to string", err)
        return err
    }
    //fmt.Println(namesStr)
    namesInterface := make([]interface{}, 0)
    for i := range namesStr {
        namesInterface = append(namesInterface, namesStr[i])
    }
    reply2, err := redis.Values(redisHandler.Get().Do("MGET", namesInterface...))
    if err != nil {
        fmt.Println("Cant get result of keys", err)
        return err
    }
    results, err := redis.Strings(reply2, nil)
    //fmt.Println(results)
    if err != nil {
        fmt.Println("Cant convert result to string", err)
        return err
    }
    for i := 0; i < len(results); i++ {
        host, err := redis.String(results[i], nil)
        if err != nil {
            fmt.Println(err)
            continue
        }
        tmp := strings.Split(namesStr[i], ":")
        if len(tmp) >= 3 {
            id, err := strconv.Atoi(tmp[2])
            if err != nil {
                fmt.Println(err)
                continue
            }
            if id != 0 {
                servers[id] = host 
                log.Debug("monitor ", id, host)
            }
        }
    }
